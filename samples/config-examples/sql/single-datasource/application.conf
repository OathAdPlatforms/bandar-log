#******************************************************************************
# Copyright 2018, Oath Inc.
# Licensed under the terms of the Apache Version 2.0 license.
# See LICENSE file in project root directory for terms.
#******************************************************************************

datadog-config {                                       # datadog config
  host = null                                          # use 'null' to use local datadog agent or specify host value
}

vertica-config {                                       # vertica data source config
  host = "example.host.com"
  port = "5433"
  dbname = "dbname"
  username = "username"
  password = "password"
  schema = "schema"
  use-ssl = false
  max.pool.size = 10                                   # connection pool size
  connection.timeout.ms = 60000                        # connection timeout in ms
}

bandarlogs {                                           # system object, all bandarlogs should be inside it

  vertica-bandarlog {                                  # bandarlog name, can be any name

    enabled = true                                     # flag to enable/disable bandarlog

    bandarlog-type = "sql"                             # bandarlog type, also can be 'kafka'

    metrics = ["IN", "OUT", "LAG"]                     # list of metrics which are should be calculated and reported for the chosen data sources

    reporters = [                                      # list of reporters, where each metric should be reported
      {
        type = "datadog"                               # reporter type
        config-id = "datadog-config"                   # reference to reporter config
      }
    ]

    report {
      prefix = "vertica_metrics"                       # report prefix which should be used for reported metrics (kafka_metrics.in_messages..)
      interval.sec = 180                               # reporter running interval
    }

    in-connector {                                     # connector for IN data source
      type = "vertica"                                 # connector type (vertica, presto)
      config-id = "vertica-config"                     # data source config id
      tag = "vertica-tag-name"                         # connector tag value
    }

    out-connectors = [                                 # list of connectors for OUT data sources
      {
        type = "vertica"                               # connector type (vertica, presto)
        config-id = "vertica-config"                   # data source config id
        tag = "vertica-tag-name"                       # connector tag value
      }
    ]

    scheduler {                                        # scheduler specifies bandar-log execution time
      delay.seconds = 0                                # delay in seconds before bandarlog is to be executed
      scheduling.seconds = 180                         # time in seconds between bandarlog executions
    }

    tables = [                                         # list of tables, which should be used to get data for the chosen metrics
      {                                                # config for table when column-type = timestamp
        column-type = "timestamp"                      # type of partition column, e.g., "datetime" (date, timestamp), "timestamp" (timestamp measured in milliseconds, to measure in seconds, minutes or hours use "timestamp:second", "timestamp:minute", "timestamp:hour")
        in-table = "in_table_1"                        # table name for for the IN metric
        in-columns = ["in_column_1"]                   # column name for the IN metric
        out-table = "out_table_1"                      # table name for for the OUT metric
        out-columns = ["out_column_1"]                 # column name for the OUT metric
      },
      {                                                # config for table when column-type = datetime
        column-type = "datetime"                       # type of partition column, e.g., "datetime" (date, timestamp), "timestamp" (timestamp measured in milliseconds)
        in-table = "in_table_n"                        # table name for for the IN metric
        in-columns = ["date=yyyy-MM-dd HH:mm:ss"]      # <column>=<format> pair for the IN metric
        out-table = "in_table_n"                       # table name for for the OUT metric
        out-columns = ["date=yyyy-MM-dd HH:mm:ss"]     # <column>=<format> pair for the OUT metric
      }
    ]
  }
}
